# This is a basic workflow to help you get started with Actions

name: Push to CriblWorkerGroups

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "test and main" branch
  push:
    branches:
      - test
      # - main
  pull_request:
    branches:
      - test
      # - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run of the jobs needed to deploy to Cribl Worker Groups and Workspaces
jobs:
  # This workflow contains a single job called "deploy-to-Test" which deploys to Cribl Test Worker Groups
  deploy-to-test:
    if: github.ref == 'refs/heads/test'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so your job can access it
      - uses: actions/checkout@v4
      # Installs packs across worker groups
      - name: Install pack across worker groups
        env:
          CRIBL_CLIENT_ID: ${{ secrets.CRIBL_CLIENT_ID }}
          CRIBL_CLIENT_SECRET: ${{ secrets.CRIBL_CLIENT_SECRET }}
          CRIBL_ENDPOINT: ${{ vars.TEST_ENDPOINT }}
          CRIBL_WG_LIST: test_worker_groups.txt
          PACK_REPO_HTTPS_URL: git+${{github.server_url}}/${{github.repository}}.git
          PACK_REPO_SSH_TOKEN: ${{  secrets.REPO_PERSONAL_ACCESS_TOKEN  }}
          REPO_OWNER: ${{  github.repository_owner  }}
          REPO_NAME: ${{  github.repository  }}
          # Set the install type to override the install if a pack exists in a destination worker group
          OVERRIDE: true
          # Set the branch of the pack to push to the worker groups
          PACK_BRANCH: test
          # Set to true if using a public repo and false if using a private repo
          PUBLIC_REPO: false
        run: |
          USE_HTTPS_GIT=$PUBLIC_REPO
          # Checks whether a private or public repository is being used.
          if [[ ""USE_HTTPS_GIT"" == "true" ]]; then
            PACK_REPO_URL="$PACK_REPO_HTTPS_URL"
          else
            PACK_REPO_URL="git+https://$REPO_OWNER:$PACK_REPO_SSH_TOKEN@github.com/$REPO_NAME.git"
          fi
          # Reads the list of worker groups to install the pack to
          WG_LIST="$(pwd)/$CRIBL_WG_LIST"
          # Gets the access token to authenticate with the Cribl API
          echo "Running auth request"
          AUTH_RESPONSE=$(curl -s -w "\n%{auth_http_code}" -X POST "https://login.cribl.cloud/oauth/token" \
          -H "Content-Type: application/json" \
          -d "{\"grant_type\": \"client_credentials\",\"client_id\": \"$CRIBL_CLIENT_ID\", \"client_secret\": \"$CRIBL_CLIENT_SECRET\", \"audience\": \"https://api.cribl.cloud\"}" \
          || exit 1)
          AUTH_HTTP_CODE=$(echo "$AUTH_RESPONSE" | tail -n1)
          ACCESS_TOKEN=$(echo "$AUTH_RESPONSE" | sed '$d' | jq -r '.access_token')
          echo "Checking auth response"
          # Checks if the authentication request was successful
          if [ "AUTH_HTTP_CODE" -eq 200 ]; then
            echo "Request succeeded with status code $AUTH_HTTP_CODE."
            echo "----------------------------------------"
          else
            echo "Request failed with status code $AUTH_HTTP_CODE."
            echo "----------------------------------------"
            # Exit on the first non-200 response
            exit 1
          fi
          echo "Running pack install request"
          while IFS= read -r WORKERGROUP || [[ -n "$WORKERGROUP" ]]; do
            MAIN_ENDPOINT="$CRIBL_ENDPOINT"
            WG_ENDPOINT="$MAIN_ENDPOINT/$WORKERGROUP/packs"
            INSTALL_RESPONSE=$(curl -s -w "\n%{install_http_code}" -X POST "$WG_ENDPOINT" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H 'Content-Type: application/json' \
            -d "{\"source\": \"$PACK_REPO_URL\",\"force\":$OVERRIDE,\"spec\":\"$PACK_BRANCH\",\"allowCustomFunctions\":false}" \
            || exit 1)
            INSTALL_HTTP_CODE=$(echo "$INSTALL_RESPONSE" | tail -n1)
            INSTALL_RESPONSE_BODY=$(echo "$INSTALL_RESPONSE" | sed '$d')
            # Checks if the pack installation request was successful
            if [ "$INSTALL_HTTP_CODE" -eq 200 ]; then
              echo "Pack install request succeeded with status code $INSTALL_HTTP_CODE."
              echo "Pack was installed to worker group $WORKERGROUP. Response: $INSTALL_RESPONSE_BODY"
              echo "----------------------------------------"
            else
              echo "Pack install request failed with status code $INSTALL_HTTP_CODE."
              echo "----------------------------------------"
              # Exit on the first non-200 response
              exit 1
            fi
          done < "$WG_LIST"
  deploy-to-prod:
    if: github.ref == 'refs/heads/main'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE so your job can access it
      - uses: actions/checkout@v4
      # Installs packs across worker groups
      - name: Install pack across worker groups
        env:
          CRIBL_CLIENT_SECRET: ${{ secrets.CRIBL_CLIENT_SECRET }}
          CRIBL_ENDPOINT: ${{ vars.PROD_ENDPOINT }}
          CRIBL_WG_LIST: prod_worker_groups.txt
          PACK_REPO_HTTPS_URL: git+${{github.server_url}}/${{github.repository}}.git
          PACK_REPO_SSH_TOKEN: ${{  secrets.REPO_PERSONAL_ACCESS_TOKEN  }}
          REPO_OWNER: ${{  github.repository_owner  }}
          REPO_NAME: ${{  github.repository  }}
          # Set the install type to override the install if a pack exists in a destination worker group
          OVERRIDE: true
          # Set the branch of the pack to push to the worker groups
          PACK_BRANCH: main
          # Set to true if using a public repo and false if using a private repo
          PUBLIC_REPO: false
        run: |
          USE_HTTPS_GIT=$PUBLIC_REPO
          # Checks whether user has set 
          if [[ ""USE_HTTPS_GIT"" == "true" ]]; then
            PACK_REPO_URL="$PACK_REPO_HTTPS_URL"
          else
            PACK_REPO_URL="git+https://$REPO_OWNER:$PACK_REPO_SSH_TOKEN@github.com/$REPO_NAME.git"
          fi
          echo "$PACK_REPO_URL"
          WG_LIST="$(pwd)/$CRIBL_WG_LIST"
          ACCESS_TOKEN=$(curl -X POST "https://login.cribl.cloud/oauth/token" \
          -H "Content-Type: application/json" \
          -d "{\"grant_type\": \"client_credentials\",\"client_id\": \"$CRIBL_CLIENT_ID\", \"client_secret\": \"$CRIBL_CLIENT_SECRET\", \"audience\": \"https://api.cribl.cloud\"}" \
          | jq -r '.access_token')
          while IFS= read -r WORKERGROUP || [[ -n "$WORKERGROUP" ]]; do
            MAIN_ENDPOINT="$CRIBL_ENDPOINT"
            WG_ENDPOINT="$MAIN_ENDPOINT/$WORKERGROUP/packs"
            curl -X POST "$WG_ENDPOINT" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H 'Content-Type: application/json' \
            -d "{\"source\": \"$PACK_REPO_URL\",\"force\":$OVERRIDE,\"spec\":\"$PACK_BRANCH\",\"allowCustomFunctions\":false}"
          done < "$WG_LIST"
